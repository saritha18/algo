http://websystique.com/springmvc/spring-mvc-requestbody-responsebody-example/

@RequestBody and @ResponseBody annotations are used to bind the HTTP request/response body with a domain object 
in method parameter or return type. Behind the scenes, these annotation uses HTTP Message converters to convert the 
body of HTTP request/response to domain objects.
------------------------------------------------------------------------------------------------------------
@ResponseBody

 is a Spring annotation which binds a method return value to the web response body. 
It is not interpreted as a view name. It uses HTTP Message converters to convert the return value to HTTP response body, based on the content-type 
in the request HTTP header.
---------------------------------------------------------------------------------------------------------------
@RequestBody

If a method parameter is annotated with @RequestBody, Spring will bind the incoming HTTP request body
(for the URL mentioned in @RequestMapping for that method) to that parameter.
 While doing that, Spring will [behind the scenes] use HTTP Message converters to convert the HTTP request body 
into domain object [deserialize request body to domain object], based on Accept header present in request.

The Accept header is used by HTTP clients [browsers] to tell the server what content types they’ll accept.
The server sends back the response, which will include a Content-Type header telling the client what the content 
type of the returned content actually is. In case of POST or PUT request, browsers do send data in request, 
so they actually send content-type as well.
-----------------------------------------------------------------------------------------------------------
@Bean

Spring @Bean Annotation is applied on a method to specify that it returns a bean to be managed by Spring context. 
Spring Bean annotation is usually declared in Configuration classes methods.
------------------------------------------------------------------------------------------------------------
@RestController

The @RestController annotation was introduced in Spring 4.0 to simplify the creation of RESTful web services. 
It's a convenience annotation that combines @Controller and @ResponseBody – which eliminates the need to annotate 
every request handling method of the controller class with the @ResponseBody annotation
----------------------------------------------------------------------------------------------------------------
@Configuration

Spring @Configuration annotation helps in Spring annotation based configuration. @Configuration annotation indicates
that a class declares one or more @Bean methods and may be processed by the Spring container to generate bean 
definitions and service requests for those beans at runtime.
--------------------------------------------------------------------------------------------------------------------------
@ComponentScan
 Configures component scanning directives for use with @Configuration classes. Here we can specify the base packages to scan
 for spring components.
---------------------------------------------------------------------------------------------------------------------------
@Component
Indicates that an annotated class is a “component”. Such classes are considered as candidates for auto-detection
when using annotation-based configuration and classpath scanning.
---------------------------------------------------------------------------------------------------------------------------
@PropertySource
 provides a simple declarative mechanism for adding a property source to Spring’s Environment. There is a similar annotation for
 adding an array of property source files i.e @PropertySources.
------------------------------------------------------------------------------------------------------------------------------------
@Service 
Indicates that an annotated class is a “Service”. This annotation serves as a specialization of @Component, allowing for implementation classes 
to be autodetected through classpath scanning.
---------------------------------------------------------------------------------------------------------------------------------------------
@Repository
Indicates that an annotated class is a “Repository”. This annotation serves as a specialization
 of @Component and advisable to use with DAO classes.
--------------------------------------------------------------------------------------------------------------------------------------------
@Autowired: Spring @Autowired annotation is used for automatic injection of beans. Spring @Qualifier annotation 
is used in conjunction with Autowired to avoid confusion when we have two of more bean configured for same type.    
-------------------------------------------------------------------------------------------------------------------------------------
ResponseEntity
ResponseEntity represents the whole HTTP response: status code, headers, and body. Because of it, we can use it 
to fully configure the HTTP response.
------------------------------------------------------------------------------------------------------------------------------------------------------


           